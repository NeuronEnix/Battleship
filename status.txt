MileStone:
    | - base
    | - base grid
    | - ship dragble
    | - ship rotation within the base
    | - adding crosshair
    | - adding smoke
    | - adding explosion
    | - adding missfire
    | - mass explosion
    | - adding sound
    | - intro
    | - Menu (main_menu)
    x - batches
    x - Scaling all models based on xy and wh

Working on:
    - refactoring ship, base and GameModel
    - merging model to media 
    - merging Grid to GameModel
    - link menu options to game
    - making multi Player 
    - creating Player 
    - Scaling Objects

Commit:
    - changed code structure
        - GameModel <- Explosion
        - GameModel <- Ship
        - GameModel <- Player

    - Added GameMaster
        - Controls gameplay ( not done )

    - Added quad to model.py
    - Quads can be added to batch retaining blending



Note :
    - Menu.py is a mess needs refactoring


Ship( GameModel ) :
    - mousePress( xy ) : left
    - mouseDrag( xy ) : left
    - mouseRelease( xy, button )
    - hit( xy ) : left
    - archive( )
    - extract( )

Player( GameModel ) :
    - mouseMotion( xy )
    - mousePress( xy ) : left
    - mouseDrag( xy ) : left
    - mouseRelease( xy, button )
    - hit( xy ) : left
    - archive( )
    - extract( )

GameMaster :
    - playerSetup( playerName )
    -
    - mouseMotion( xy )
    - mousePress( xy ) : left
    - mouseDrag( xy ) : left
    - mouseRelease( xy, button )
    - archive( )
    - extract( )

Reference:

def dispText(px, py, text):
    pyglet.text.Label(text,
                          font_name='Times New Roman',
                          font_size=10,
                          x=10, y=750).draw()



Mouse Pointer :
    Defaults:
        cursor = window.get_system_mouse_cursor(win.CURSOR_HELP)
        window.set_mouse_cursor(cursor)
    Custom:
        image = pyglet.image.load('cursor.png')
        cursor = pyglet.window.ImageMouseCursor(image, 16, 8)
        window.set_mouse_cursor(cursor)



Ready!
self.qxy = [1188, 2]
self.qwh = [172, 80]
self.txy = [31, 21]
self.dd()
def dd( self ) :
    self.lb = py.text.Label('Ready!',
                  font_name='Times New Roman',
                  font_size=30,
                  x=self.qxy[0]+self.txy[0],
                  y=self.qxy[1] +self.txy[1])
    self.qd = Quad( self.qxy, self.qwh )
